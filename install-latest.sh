#!/bin/bash

# Auto-Installation Script f√ºr MTH BDE IoT Client auf Raspberry Pi
# Erkennt automatisch den korrekten DEB-Dateinamen und installiert die neueste Version

set -e

echo "======================================"
echo "üçì MTH BDE IoT Client Auto-Installer"
echo "======================================"
echo ""

# Konfiguration
GITHUB_REPO="mthitservice/MTHBDEIOTClient"
RELEASES_URL="https://github.com/${GITHUB_REPO}/blob/main/releases/latest"
TEMP_DIR="/tmp/mthbdeiot-install"

# √úberpr√ºfe Systemvoraussetzungen
echo "üîç √úberpr√ºfe Systemvoraussetzungen..."

# Pr√ºfe Architektur
ARCH=$(uname -m)
if [[ "$ARCH" != "armv7l" ]]; then
    echo "‚ùå Fehler: Diese Version ist nur f√ºr ARMv7l (Raspberry Pi 3+) geeignet."
    echo "   Aktuelle Architektur: $ARCH"
    exit 1
fi

# Pr√ºfe OS
if ! command -v dpkg &> /dev/null; then
    echo "‚ùå Fehler: dpkg nicht gefunden. Debian/Ubuntu-basiertes System erforderlich."
    exit 1
fi

# Pr√ºfe Berechtigungen
if [[ $EUID -eq 0 ]]; then
    echo "‚ùå Fehler: F√ºhre dieses Script nicht als root aus."
    echo "   Das Script wird sudo verwenden, wenn n√∂tig."
    exit 1
fi

echo "‚úÖ Systemvoraussetzungen erf√ºllt"
echo ""

# Erstelle tempor√§res Verzeichnis
echo "üìÅ Erstelle tempor√§res Verzeichnis..."
mkdir -p "$TEMP_DIR"
cd "$TEMP_DIR"

# Lade SHA256SUMS zur Dateinamenerkennung
echo "üîç Erkenne verf√ºgbare DEB-Dateien..."
if ! wget -q "$RELEASES_URL/SHA256SUMS" -O SHA256SUMS; then
    echo "‚ùå Fehler: Kann SHA256SUMS nicht herunterladen."
    echo "   URL: $RELEASES_URL/SHA256SUMS"
    echo "   Pr√ºfe Internetverbindung und Repository-Verf√ºgbarkeit."
    exit 1
fi

# M√∂gliche Dateinamen (in Priorit√§tsreihenfolge)
POSSIBLE_PATTERNS=(
    "MthBdeIotClient_.*_armv7l\.deb"
    "MthBdeIotClient_.*_armhf\.deb"
    "mthbdeiotclient_.*_armv7l\.deb"
    "mthbdeiotclient_.*_armhf\.deb"
)

DEB_FILENAME=""
for pattern in "${POSSIBLE_PATTERNS[@]}"; do
    if DEB_FILENAME=$(grep -oE "$pattern" SHA256SUMS | head -1); then
        echo "‚úÖ Gefundene DEB-Datei: $DEB_FILENAME"
        break
    fi
done

if [[ -z "$DEB_FILENAME" ]]; then
    echo "‚ùå Fehler: Keine passende DEB-Datei in SHA256SUMS gefunden!"
    echo "üìã Verf√ºgbare Dateien:"
    cat SHA256SUMS
    exit 1
fi
echo ""
echo "üéØ Ausgew√§hlte DEB-Datei: $DEB_FILENAME"

# Lade DEB-Datei herunter
echo "‚¨áÔ∏è Lade $DEB_FILENAME herunter..."
if ! wget -q "$RELEASES_URL/$DEB_FILENAME" -O "$DEB_FILENAME"; then
    echo "‚ùå Fehler: Kann DEB-Datei nicht herunterladen."
    echo "   URL: $RELEASES_URL/$DEB_FILENAME"
    exit 1
fi

# Pr√ºfe Dateigr√∂√üe
FILE_SIZE=$(stat -c%s "$DEB_FILENAME")
if [[ $FILE_SIZE -lt 1000000 ]]; then  # < 1MB
    echo "‚ùå Fehler: DEB-Datei ist zu klein ($FILE_SIZE bytes)."
    echo "   M√∂glicherweise ist ein Download-Fehler aufgetreten."
    exit 1
fi

echo "‚úÖ DEB-Datei heruntergeladen ($(numfmt --to=iec $FILE_SIZE))"

# Validiere DEB-Paket vor Installation
echo "üîç Validiere DEB-Paket..."
if ! dpkg-deb --info "$DEB_FILENAME" >/dev/null 2>&1; then
    echo "‚ùå Fehler: Heruntergeladene Datei ist kein g√ºltiges DEB-Paket!"
    echo "   Datei-Typ: $(file "$DEB_FILENAME")"
    echo "   Datei-Header: $(head -c 100 "$DEB_FILENAME" | xxd -l 50)"
    exit 1
fi

echo "‚úÖ DEB-Paket erfolgreich validiert"

# √úberpr√ºfe Pr√ºfsumme
echo "üîí √úberpr√ºfe Integrit√§t der Datei..."
if sha256sum -c SHA256SUMS 2>/dev/null | grep -q "$DEB_FILENAME: OK"; then
    echo "‚úÖ Pr√ºfsumme korrekt"
else
    echo "‚ùå Fehler: Pr√ºfsumme stimmt nicht √ºberein."
    echo "   Die Datei k√∂nnte besch√§digt oder manipuliert sein."
    exit 1
fi

# Entferne alte Version falls vorhanden
echo "üóëÔ∏è Entferne eventuelle alte Version..."
if dpkg -l | grep -q "mthbdeiotclient"; then
    echo "  Alte Version gefunden, entferne..."
    sudo dpkg -r mthbdeiotclient 2>/dev/null || true
    echo "  ‚úÖ Alte Version entfernt"
else
    echo "  ‚ÑπÔ∏è Keine alte Version gefunden"
fi

# Installiere DEB-Paket
echo "üì¶ Installiere MTH BDE IoT Client..."
if sudo dpkg -i "$DEB_FILENAME"; then
    echo "‚úÖ DEB-Paket installiert"
else
    echo "‚ö†Ô∏è Installation mit Fehlern, versuche Abh√§ngigkeiten zu reparieren..."
    sudo apt-get update
    sudo apt-get install -f -y
    echo "‚úÖ Abh√§ngigkeiten repariert"
fi

# √úberpr√ºfe Installation
echo "üîç √úberpr√ºfe Installation..."
if command -v mthbdeiotclient &> /dev/null; then
    echo "‚úÖ MTH BDE IoT Client erfolgreich installiert"
    
    # Zeige Versionsinformationen
    echo ""
    echo "üìã Installierte Version:"
    dpkg -l | grep mthbdeiotclient || echo "  Version: $(dpkg -s mthbdeiotclient | grep Version | cut -d' ' -f2)"
    
    # Zeige Dateipfade
    echo ""
    echo "üìÅ Installationspfade:"
    echo "  Executable: $(which mthbdeiotclient)"
    echo "  Desktop File: $(find /usr/share/applications -name "*mthbdeiot*" 2>/dev/null | head -1)"
    
else
    echo "‚ùå Fehler: MTH BDE IoT Client nicht im PATH gefunden."
    echo "   Pr√ºfe die Installation manuell."
    exit 1
fi

# Aufr√§umen
echo "üßπ R√§ume tempor√§re Dateien auf..."
cd /
rm -rf "$TEMP_DIR"

echo ""
echo "======================================"
echo "üéâ INSTALLATION ABGESCHLOSSEN!"
echo "======================================"
echo ""
echo "üöÄ ANWENDUNG STARTEN:"
echo "  Desktop:     Anwendungsmen√º > MTH BDE IoT Client"
echo "  Terminal:    mthbdeiotclient"
echo "  Hintergrund: nohup mthbdeiotclient &"
echo ""
echo "üîß BEI PROBLEMEN:"
echo "  Dependencies: sudo apt-get install -f"
echo "  Neustart:     sudo systemctl restart mthbdeiotclient"
echo "  Logs:         journalctl -u mthbdeiotclient"
echo "  Deinstall:    sudo dpkg -r mthbdeiotclient"
echo ""
echo "üìñ WEITERE HILFE:"
echo "  GitHub: https://github.com/$GITHUB_REPO"
echo "  Issues: https://github.com/$GITHUB_REPO/issues"
echo ""
echo "‚úÖ Installation erfolgreich abgeschlossen!"
echo "======================================"
